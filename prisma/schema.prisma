// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model emojis {
  id        Int     @id @default(autoincrement())
  aliases   String[]
  name      String
  category  String?
  url       String
  isSensitive Boolean?
}

model user {
  id        Int     @id @default(autoincrement())
  userId    String  @unique
  password  String
  profile   profile?
}

model profile {
  id           Int     @id @default(autoincrement())
  userId       String  @unique
  nickname     String?
  avatarUrl    String?
  sentences    String?
  introduce    String?
  misskeyHandle String?
  ownedCategory category[]
  user         user    @relation(fields: [userId], references: [userId])
  post         post[]
}

model post {
  id           Int    @id @default(autoincrement())
  title        String
  userId       String
  postUrl      String
  thumbnail    String?
  postAt       DateTime @default(now())
  author       profile @relation(fields: [userId], references: [userId])
  category     category @relation(fields: [categoryId], references: [id])
  categoryId   Int
  reply         reply[]
}

model reply {
  id            Int       @id @default(autoincrement())
  avatar        String?
  name          String
  postId        Int       
  post          post      @relation(fields: [postId], references: [id])
  text          String
  replyId       Int?
  reply         reply?    @relation("rereply", fields: [replyId], references: [id])
  rereply       reply[]   @relation("rereply")
}

model category {
  id           Int    @id @default(autoincrement())
  category     String
  ownerId      Int
  owner        profile?  @relation(fields: [ownerId], references: [id])
  posts        post[]
}